# ==============================================================================
# Version       : 0.1
# Date          : 2017/03/30
# Last updated  : 2017/03/30
# Autor         : Alexandre Bray
# Information   : support@opendoc.net 
# GIT URL       : https://github.com/opendocnet/elk/blob/master/logstash_indexer.conf
# GIT REVISION  : 14
# Revision :
#   0.1 : first version (rev 14)
# ==============================================================================
# Location of file : /etc/logstash/conf.d/logstash_indexer.conf

input {

    redis {

        host => "localhost"
        key => "logstash"
        data_type => "list"
        codec => json

    }

}

filter {

    if [type] == "TYPE_LOG_WEB_ACCESS" {
  
    # template : /usr/share/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-4.0.2/patterns/grok-patterns
        grok {
        
            match => {
                "message" => "%{DATA}%{MONTH} %{DATA}%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} %{USERNAME:host} %{USERNAME:application}: %{IPORHOST:clientip} %{HTTPDUSER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes:int}|-) %{QS:referrer} %{QS:agent} \"%{GREEDYDATA:trueclientip}\" %{SECOND:exectime:float}"
            }
        
            tag_on_failure => ["grok_failure_TYPE_LOG_WEB_ACCESS"]

        }
        
    }
  
    if [type] == "TYPE_LOG_WEB_ACCESS_ERROR" {
    
        grok {
        
            match => {
                "message" => [
                    "%{DATA}%{MONTH} %{DATA}%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} %{USERNAME:host} %{USERNAME:application}: %{DATA} %{HOUR}:%{MINUTE}:%{SECOND} \[%{DATA:error_level}\] (%{NUMBER:pid:int}#%{NUMBER}: \*%{NUMBER}|\*%{NUMBER}) %{GREEDYDATA:error_message}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:error_server})(?:, request: %{QS:error_request})?(?:, host: %{QS:error_host})?(?:, referrer: \"%{URI:error_referrer})",
                    "%{DATA}%{MONTH} %{DATA}%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} %{USERNAME:host} %{USERNAME:application}: %{DATA} %{HOUR}:%{MINUTE}:%{SECOND} \[%{DATA:error_level}\] (%{NUMBER:pid:int}#%{NUMBER}: \*%{NUMBER}|\*%{NUMBER}) %{GREEDYDATA:error_message}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: )(?:, request: %{QS:error_request})?(?:, upstream: %{DATA:upstream})?(?:, host: %{QS:error_host})?(?:, referrer: \"%{URI:error_referrer})",
                    "%{DATA}%{MONTH} %{DATA}%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} %{USERNAME:host} %{USERNAME:application}: %{DATA} %{HOUR}:%{MINUTE}:%{SECOND} \[%{DATA:error_level}\] (%{NUMBER:pid:int}#%{NUMBER}: \*%{NUMBER}|\*%{NUMBER}) %{GREEDYDATA:error_message}"
                ]
            }
        
            tag_on_failure => ["grok_failure_TYPE_LOG_WEB_ACCESS_ERROR"]
            
        }
        
    }
    
}

output {

  elasticsearch { 

    hosts => ["X.X.X.X:9207"] 

  }

}
